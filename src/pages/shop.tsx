import type { NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";

import Card from "../components/Cards/Card";

import NavBar from "../components/NavBar";
import { trpc } from "../utils/trpc";

import { ChevronDownIcon } from "@heroicons/react/24/outline";

const Shop: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });
  const { data: products } = trpc.product.getAll.useQuery();
  const dateObj = new Date();
  const monthName = dateObj.toLocaleString("default", { month: "long" });
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />
      <main className="mx-auto h-full min-h-screen max-w-7xl px-2 sm:px-6 lg:px-8">
        <h1 className="text-5xl font-extrabold leading-normal text-gray-700 md:text-[5rem]">
          <span className="text-purple-300">{monthName}</span> Prints
        </h1>

        <div className="mt-12 flex w-full justify-between">
          <button
            type="button"
            className=" flex items-center rounded-full p-1 text-gray-800 hover:text-gray-500"
          >
            <span className="font-medium">Sort</span>
            <ChevronDownIcon className="ml-2 h-5 w-5 " aria-hidden="true" />
          </button>

          <div>
            <button className="mr-5">
              <span className="font-medium">Categories</span>{" "}
              <span className="inline-flex h-6 w-6 justify-center rounded-md bg-gray-100 font-bold">
                1
              </span>
            </button>
            <button>
              <span className="font-medium">Tags</span>{" "}
              <span className="inline-flex h-6 w-6 justify-center rounded-md bg-gray-100 font-bold">
                1
              </span>
            </button>
          </div>
        </div>
        <div className="flex items-center border-t-[1px] border-gray-300 bg-slate-200">
          <p className="mr-4 p-3 font-medium">Filters</p>
          <div>
            <span className="rounded-xl bg-white px-2 py-1 font-semibold ring-1 ring-gray-200">
              Video Games
            </span>
          </div>
        </div>
        <div className="mt-10 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-4">
          {products &&
            products.length > 0 &&
            products.map((product) => <Card key={product.name} {...product} />)}
        </div>
        <div className="flex w-full items-center justify-center pt-6 text-2xl text-blue-500">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
        <AuthShowcase />
      </main>

      <footer className="border-t-2 py-5 text-center">
        <p className="text-sm font-medium">
          ©2022 Made with ❤️ and ☕ by Andrew Hunn
        </p>
      </footer>
    </>
  );
};

export default Shop;

const AuthShowcase: React.FC = () => {
  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-2">
      {sessionData && (
        <p className="text-2xl text-blue-500">
          Logged in as {sessionData?.user?.name}
        </p>
      )}
      {secretMessage && (
        <p className="text-2xl text-blue-500">{secretMessage}</p>
      )}
      <button
        className="rounded-md border border-black bg-violet-50 px-4 py-2 text-xl shadow-lg hover:bg-violet-100"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
